@model IEnumerable<ChristmasPlanner.Models.GiftListItem>

@{
    ViewBag.Title = "Index";
}
<style type="text/css">
    body {
        background-color:lightskyblue;
        /*background-image: url('../../Content/Images/white.snowflakes.jpg');*/
        background-size: cover;
        /*margin: auto;
        max-width: 100%;
        height: auto;
          animation-name: colorful;
        animation-duration: 4s;
        animation-iteration-count: infinite;*/
    }

    /*@@keyframes colorful {
        20% {
            transform: scale(0.5);
        }
    }*/
    .jumbotron {
        font-size: xx-large;
        font-weight: bold;
        font-style: italic;
        color: darkred;
    }

    .actionlink {
        font-style: italic;
        font-size: larger;
        font-weight: bold;
        color: darkred;
    }
    .table {
        font-weight: bold;
        font-style:italic;
        color: darkgreen;
    }
    .tableone {
        font-weight: bold;
        font-style: italic;
        color: darkgreen;
    }
    .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 20%;
        text-align: center;
        color: darkgreen;
    }
</style>


        <div class="tableone">
            <h2>Index</h2>
        </div>

        <p>
            @Html.ActionLink("Create New", "Create", null, new { @class = " actionlink" })
        </p>
        @if (TempData.ContainsKey("SaveResult"))
        {
            <div class="alert alert-success fade in" role="alert">

                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
                @TempData["SaveResult"]
            </div>
        }

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GiftID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BoughtGift)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonID)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GiftID)
            </td>
            <td>
                 @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BoughtGift)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Person.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PersonID)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.GiftID }, new { @class = "actionlink" }) |
                @Html.ActionLink("Details", "Details", new { id = item.GiftID }, new { @class = "actionlink" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.GiftID }, new { @class = "actionlink" })
            </td>
        </tr>
            }

        </table>
